pipeline {
      agent any
      stages {
          stage('ST1_6798847K') {
          steps {
            echo 'ST1_6798847K: Environment is prepared. Start to rollout to TEST server'
          }
          }
          stage('ST2_6798847K') {
          steps {
            echo('ST2_6798847K: TEST server is backup and updated')
          }
          }
          stage('ST3_6798847K') {
          when {
                not {
                    branch "UAT container NOT updated"
                }
          }
          steps {
                 sh '''#!/bin/bash
                 puppet resource file /tmp/clone ensure=absent force=true;
                 puppet resource file /tmp/clone ensure=directory;
	               cd /tmp/clone;
	               git clone https://<your token>@github.com/<your repo>/devops_repo.git;
                 targets=puppetclient1;
                 locate_script='/tmp/clone/devops_repo/script_to_run';
                 bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
                 '''
                 echo "ST3_6798847K: Test result for TEST server is generated  : TEST-result-file "
          }
          }
          stage('ST4_6798847K') {
          steps {
            echo('ST4_6798847K: TEST server’s testing result has been inspected')
                script {
                    s4Input = input(id: 'S4Input', message: 'Proceed Production or RollBack Test?', parameters: [booleanParam(defaultValue: true, description: 'Click Proceed or Rpllback', name: 'Proceed')])
                    if (s4Input) {
                        env.DECISION = 'proceed'
                    } else {
                        env.DECISION = 'rollback'
                    }
            }
          }
          stage('ST5_6798847K') {
          when {
                not {
                    branch "Production container NOT updated"
                }
          }
          steps {
                 sh '''#!/bin/bash
                 targets=puppetclient2;
                 locate_script='/tmp/clone/devops_repo/script_to_run';
                 bolt script run $locate_script -t $targets -u clientadm -p user123 --no-host-key-check --run-as root;
                 '''
                 echo "Production container updated"
          }
          }
          stage('ST6_6798847K') {
          steps {
            script {
                    if (env.DECISION == 'proceed') {
                        echo "ST6_6798847K: Production server is updated"
                    } else {
                        echo "ST6_6798847K: TEST server is rollback"
                    }
                }
             }
          }
      }
}
